package com.changyi.fi.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MerchantInvoicePOExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public MerchantInvoicePOExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(Integer value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(Integer value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(Integer value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<Integer> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDIsNull() {
            addCriterion("INV_ID is null");
            return (Criteria) this;
        }

        public Criteria andINV_IDIsNotNull() {
            addCriterion("INV_ID is not null");
            return (Criteria) this;
        }

        public Criteria andINV_IDEqualTo(Integer value) {
            addCriterion("INV_ID =", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDNotEqualTo(Integer value) {
            addCriterion("INV_ID <>", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDGreaterThan(Integer value) {
            addCriterion("INV_ID >", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDGreaterThanOrEqualTo(Integer value) {
            addCriterion("INV_ID >=", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDLessThan(Integer value) {
            addCriterion("INV_ID <", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDLessThanOrEqualTo(Integer value) {
            addCriterion("INV_ID <=", value, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDIn(List<Integer> values) {
            addCriterion("INV_ID in", values, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDNotIn(List<Integer> values) {
            addCriterion("INV_ID not in", values, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDBetween(Integer value1, Integer value2) {
            addCriterion("INV_ID between", value1, value2, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andINV_IDNotBetween(Integer value1, Integer value2) {
            addCriterion("INV_ID not between", value1, value2, "INV_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDIsNull() {
            addCriterion("MER_ID is null");
            return (Criteria) this;
        }

        public Criteria andMER_IDIsNotNull() {
            addCriterion("MER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMER_IDEqualTo(Integer value) {
            addCriterion("MER_ID =", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDNotEqualTo(Integer value) {
            addCriterion("MER_ID <>", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDGreaterThan(Integer value) {
            addCriterion("MER_ID >", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDGreaterThanOrEqualTo(Integer value) {
            addCriterion("MER_ID >=", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDLessThan(Integer value) {
            addCriterion("MER_ID <", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDLessThanOrEqualTo(Integer value) {
            addCriterion("MER_ID <=", value, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDIn(List<Integer> values) {
            addCriterion("MER_ID in", values, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDNotIn(List<Integer> values) {
            addCriterion("MER_ID not in", values, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDBetween(Integer value1, Integer value2) {
            addCriterion("MER_ID between", value1, value2, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMER_IDNotBetween(Integer value1, Integer value2) {
            addCriterion("MER_ID not between", value1, value2, "MER_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDIsNull() {
            addCriterion("MERCHANT_ID is null");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDIsNotNull() {
            addCriterion("MERCHANT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDEqualTo(Integer value) {
            addCriterion("MERCHANT_ID =", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDNotEqualTo(Integer value) {
            addCriterion("MERCHANT_ID <>", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDGreaterThan(Integer value) {
            addCriterion("MERCHANT_ID >", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDGreaterThanOrEqualTo(Integer value) {
            addCriterion("MERCHANT_ID >=", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDLessThan(Integer value) {
            addCriterion("MERCHANT_ID <", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDLessThanOrEqualTo(Integer value) {
            addCriterion("MERCHANT_ID <=", value, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDIn(List<Integer> values) {
            addCriterion("MERCHANT_ID in", values, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDNotIn(List<Integer> values) {
            addCriterion("MERCHANT_ID not in", values, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDBetween(Integer value1, Integer value2) {
            addCriterion("MERCHANT_ID between", value1, value2, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andMERCHANT_IDNotBetween(Integer value1, Integer value2) {
            addCriterion("MERCHANT_ID not between", value1, value2, "MERCHANT_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDIsNull() {
            addCriterion("INVOICE_ID is null");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDIsNotNull() {
            addCriterion("INVOICE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDEqualTo(Integer value) {
            addCriterion("INVOICE_ID =", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDNotEqualTo(Integer value) {
            addCriterion("INVOICE_ID <>", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDGreaterThan(Integer value) {
            addCriterion("INVOICE_ID >", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDGreaterThanOrEqualTo(Integer value) {
            addCriterion("INVOICE_ID >=", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDLessThan(Integer value) {
            addCriterion("INVOICE_ID <", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDLessThanOrEqualTo(Integer value) {
            addCriterion("INVOICE_ID <=", value, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDIn(List<Integer> values) {
            addCriterion("INVOICE_ID in", values, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDNotIn(List<Integer> values) {
            addCriterion("INVOICE_ID not in", values, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDBetween(Integer value1, Integer value2) {
            addCriterion("INVOICE_ID between", value1, value2, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andINVOICE_IDNotBetween(Integer value1, Integer value2) {
            addCriterion("INVOICE_ID not between", value1, value2, "INVOICE_ID");
            return (Criteria) this;
        }

        public Criteria andAMOUNTIsNull() {
            addCriterion("AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andAMOUNTIsNotNull() {
            addCriterion("AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andAMOUNTEqualTo(BigDecimal value) {
            addCriterion("AMOUNT =", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTNotEqualTo(BigDecimal value) {
            addCriterion("AMOUNT <>", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTGreaterThan(BigDecimal value) {
            addCriterion("AMOUNT >", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT >=", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTLessThan(BigDecimal value) {
            addCriterion("AMOUNT <", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AMOUNT <=", value, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTIn(List<BigDecimal> values) {
            addCriterion("AMOUNT in", values, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTNotIn(List<BigDecimal> values) {
            addCriterion("AMOUNT not in", values, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT between", value1, value2, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andAMOUNTNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMOUNT not between", value1, value2, "AMOUNT");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMELessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMELessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMEBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "CREATE_TIME");
            return (Criteria) this;
        }

        public Criteria andCREATE_TIMENotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "CREATE_TIME");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MERCHANT_INVOICE
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}